How to run:

To generate a QR code use: python3 submission.py --generate-qr

A QR code will be created in a file called qr.jpg in the current working directory

To generate an OTP use: python3 submission.py --get-otp

The OTP will be printed to the screen


Implementation:

This QR code generator relies on qrcode 6.1, which can be installed by running: pip install qrcode[pil]

When the program is run, if the --generate-qr argument is used, the program generates a qr code with the dummy account information and saves the qr code in a file called qr.jpg in the current working directory.

When the program is run, if the --get-otp argument is used, the program first caluclates the time, divides it by the interval (30 seconds) and encodes the result correctly for use in the hmac-sha-1 generation.
The program then encodes the secret key that was used in creating the qr code, and then generates a hash using SHA-1.
The result is converted to a byte array and the offset calculated based on the standards in RFC 6238.
The resulting truncated hash is then displayed to the screen. The 6-digit code will match the code generated by Google Authenticator for the qr code generated previously.

NOTE: I was unable to test the program using the Google Authenticator Android app, only the iOS app. 

NOTE: There is no Makefile included in with this submission because there is nothing to compile.

